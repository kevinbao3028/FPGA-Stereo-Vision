
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE1_SOC(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	inout 		          		PS2_CLK2,
	inout 		          		PS2_DAT,
	inout 		          		PS2_DAT2,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		     [7:0]		VGA_B,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS,

	//////////// GPIO_0, GPIO_0 connect to D8M-GPIO //////////
	inout 		          		aCAMERA_I2C_SCL,
	inout 		          		aCAMERA_I2C_SDA,
	output		          		aCAMERA_PWDN_n,
	output		          		aMIPI_CS_n,
	inout 		          		aMIPI_I2C_SCL,
	inout 		          		aMIPI_I2C_SDA,
	output		          		aMIPI_MCLK,
	input 		          		aMIPI_PIXEL_CLK,
	input 		     [9:0]		aMIPI_PIXEL_D,
	input 		          		aMIPI_PIXEL_HS,
	input 		          		aMIPI_PIXEL_VS,
	output		          		aMIPI_REFCLK,
	output		          		aMIPI_RESET_n,

	//////////// GPIO_1, GPIO_1 connect to D8M-GPIO //////////
	inout 		          		bCAMERA_I2C_SCL,
	inout 		          		bCAMERA_I2C_SDA,
	output		          		bCAMERA_PWDN_n,
	output		          		bMIPI_CS_n,
	inout 		          		bMIPI_I2C_SCL,
	inout 		          		bMIPI_I2C_SDA,
	output		          		bMIPI_MCLK,
	input 		          		bMIPI_PIXEL_CLK,
	input 		     [9:0]		bMIPI_PIXEL_D,
	input 		          		bMIPI_PIXEL_HS,
	input 		          		bMIPI_PIXEL_VS,
	output		          		bMIPI_REFCLK,
	output		          		bMIPI_RESET_n
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================



endmodule
